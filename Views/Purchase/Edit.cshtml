@model InventoryManagmentSystem.Purchase

@{
    ViewBag.Title = "Edit";
}

<h3>Edit Purchase</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Purchase Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Purchase_name, ViewBag.ProductName as SelectList,"select Product", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Purchase_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Purchase_qnty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Purchase Quantity", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Purchase_qnty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Purchase_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Purchase Date", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Purchase_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "DisplayPurchase")
            </div>
        </div>
    </div>
}

<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
